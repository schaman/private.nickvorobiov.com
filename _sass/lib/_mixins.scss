
@mixin clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}


@mixin gradient($start-color, $end-color, $orientation) {
 background: $start-color;
  @if $orientation == vertical {
  // vertical
    background: -moz-linear-gradient(top,  $start-color 0%, $end-color 100%);
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$start-color), color-stop(100%,$end-color));
    background: -webkit-linear-gradient(top,  $start-color 0%,$end-color 100%);
    background: -o-linear-gradient(top,  $start-color 0%,$end-color 100%);
    background: -ms-linear-gradient(top,  $start-color 0%,$end-color 100%);
    background: linear-gradient(to bottom,  $start-color 0%,$end-color 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$start-color', endColorstr='$end-color',GradientType=0 );
  } @else if $orientation == horizontal {
  // horizontal
    background: -moz-linear-gradient(left,  $start-color 0%, $end-color 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,$start-color), color-stop(100%,$end-color));
    background: -webkit-linear-gradient(left,  $start-color 0%,$end-color 100%);
    background: -o-linear-gradient(left,  $start-color 0%,$end-color 100%);
    background: -ms-linear-gradient(left,  $start-color 0%,$end-color 100%);
    background: linear-gradient(to right,  $start-color 0%,$end-color 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$start-color', endColorstr='$end-color',GradientType=1 );
  } @else {
  // radial
    background: -moz-radial-gradient(center, ellipse cover,  $start-color 0%, $end-color 100%);
    background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%,$start-color), color-stop(100%,$end-color));
    background: -webkit-radial-gradient(center, ellipse cover,  $start-color 0%,$end-color 100%);
    background: -o-radial-gradient(center, ellipse cover,  $start-color 0%,$end-color 100%);
    background: -ms-radial-gradient(center, ellipse cover,  $start-color 0%,$end-color 100%);
    background: radial-gradient(ellipse at center,  $start-color 0%,$end-color 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$start-color', endColorstr='$end-color',GradientType=1 );
  }
}

@mixin transform($val) {
  -webkit-transform: $val;
  -moz-transform: $val;
  -ms-transform: $val;
  transform: $val;
}

/* FLEX
----------------------------------------------------------------------*/

@mixin flexbox {
  display:-webkit-box; // old
  display:-moz-box; // old
  display:-ms-flexbox; // ie
  display:-webkit-flex; // new
  display:flex; // new
}
@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex:  $values;
  -ms-flex:  $values;
  -webkit-flex:  $values;
  flex:  $values;
}
@mixin flex-order($order) {
  -webkit-box-ordinal-group: $order; // old
  -moz-box-ordinal-group: $order; // old
  -ms-flex-order: $order; // ie
  -webkit-order: $order; // new
  order: $order; // new
}
@mixin align-items($position) {
  -webkit-align-items: $position; // old
  -moz-align-items: $position; // old
  -ms-align-items: $position; // ie
  align-items: $position; // new
}

@mixin flex-direction($direction) {
  @if $direction == column {
    -webkit-flex-direction:vertical;
    -moz-flex-direction:vertical;
    -ms-flex-direction:column;
    -webkit-flex-direction:column;
    flex-direction:column;
  } @else {
    -webkit-flex-direction:horizontal;
    -moz-flex-direction:horizontal;
    -ms-flex-direction:row;
    -webkit-flex-direction:row;
    flex-direction:row;
  }
}

@mixin flex-wrap($inner) {
  -webkit-flex-wrap: $inner;
  -moz-flex-wrap: $inner;
  -ms-flex-wrap: $inner;
  flex-wrap: $inner;
}

@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
  justify-content: $justify;
}

/* MEDIA
----------------------------------------------------------------------*/

@mixin bp-xlarge {
  @media only screen and (min-width: $xlg) {
    @content;
  }
}

@mixin bp-large {
  @media only screen and (min-width: $lg) {
    @content;
  }
}

@mixin bp-medium {
  @media only screen and (min-width: $md) {
    @content;
  }
}

@mixin bp-small {
  @media only screen and (min-width: $sm) {
    @content;
  }
}
@mixin bp-xsmall {
  @media only screen and (min-width: $xs) {
    @content;
  }
}


// height
@mixin bp-h-sm {
  @media only screen and (min-height: 500px) {
    @content;
  }
}
@mixin bp-h-md {
  @media only screen and (min-height: 800px) {
    @content;
  }
}
@mixin bp-h-lg {
  @media only screen and (min-height: 900px) {
    @content;
  }
}



//@include respond-to(tablets) { width: 240px; };